--db init----------------------------------------------------------------------- INCREASE VIDEO VIEW COUNT FUNCTION & TRIGGER-- increase video count function & trigger----------------------------------------------------------------------- create or replace function increase_video_views()--     returns trigger as-- $$-- begin--     if tg_op = 'insert' and--        not exists (select *--                    from video_watched--                    where profile_id = new.profile_id--                      and video_id = new.video_id)--     then--         update video--         set view_count = view_count + 1--         where id = new.video_id;----         --         insert into video_watched (profile_id, video_id)-- --         values (new.profile_id, new.video_id);--     end if;----     return new;-- end;-- $$ language plpgsql;-- drop function increase_video_views();create or replace function increase_video_views()    returns trigger as$$begin    if not exists(select *                  from video_watched vw                  where vw.video_id = new.video_id                    and vw.profile_id = new.profile_id)    then    update video v    set view_count = view_count + 1    where v.id = NEW.video_id;    end if;    return NEW;end;$$ language plpgsql;create or replace trigger increase_video_views_trigger    after insert    on video_watched    for each rowexecute function increase_video_views();-- drop trigger increase_video_views;----------------------------------------------------------------------- INCREASE-DECREASE VIDEO LIKE OR DISLIKE COUNT FUNCTION & TRIGGER---------------------------------------------------------------------create or replace function video_like_function()    returns trigger as$$begin    if tg_op = 'insert' then        if new.has_like = 'LIKE' then            update video v            set like_count = like_count + 1            where v.id = new.video_id;        elseif new.has_like = 'DISLIKE' then            update video v            set dislike_count = dislike_count + 1            where v.id = new.video_id;        end if;    elseif tg_op = 'update' then        if new.has_like = 'LIKE' and old.has_like = 'DISLIKE' then            update video v            set like_count    = like_count + 1,                dislike_count = dislike_count - 1            where v.id = new.video_id;        elseif new.has_like = 'DISLIKE' and old.has_like = 'LIKE' then            update video v            set dislike_count = dislike_count + 1,                like_count    = like_count - 1            where v.id = new.video_id;        elseif new.has_like = 'DISLIKE' and old.has_like = 'DISLIKE' then            update video v            set dislike_count = dislike_count - 1            where v.id = new.video_id;        elseif new.has_like = 'LIKE' and old.has_like = 'LIKE' then            update video v            set like_count = like_count - 1            where v.id = new.video_id;        end if;    end if;    return new;end;$$ language plpgsql;create or replace trigger video_like_trigger    before insert or update    on video_like    for each rowexecute procedure video_like_function();update video vset like_count    = like_count + 1,    dislike_count = dislike_count - 1where v.id = :video_id;