package com.example.repository;import com.example.entity.VideoEntity;import com.example.mapper.VideoShortInfoMapper;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;public interface VideoRepository extends JpaRepository<VideoEntity, String> {    Page<VideoEntity> findAllByCategoryId(Integer categoryId, Pageable pageable);    Page<VideoEntity> findAllByTitle(String title, Pageable pageable);    @Query(value = "select v.id as video_id," +            "       v.title," +            "       v.category_id," +            "       v.attach_id," +            "       v.channel_id," +            "       v.description," +            "       v.video_type," +            "       v.video_status," +            "       v.created_date," +            "       p.id as prt_id," +            "       p.name," +            "       p.surname" +            " from video as v" +            "         inner join profile as p" +            "                    on v.prt_id = p.id", nativeQuery = true)    Page<VideoShortInfoMapper> pagingVideoAndOwnerShortInfo(Pageable pageable);    Page<VideoEntity> findAllByTagId(Integer tagId, Pageable pageable);}