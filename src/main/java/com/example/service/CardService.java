package com.example.service;import com.example.dto.ApiResponse;import com.example.dto.CardDTO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.*;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;@Servicepublic class CardService {    @Autowired    private RestTemplate restTemplate;    @Value("${token}")    private String TOKEN;    private final String URL = "http://localhost:8081/";    public ApiResponse create(CardDTO cardDTO) {        HttpHeaders headers = new HttpHeaders();        headers.setContentType(MediaType.APPLICATION_JSON);        headers.setBearerAuth(TOKEN);        HttpEntity<CardDTO> request = new HttpEntity<>(cardDTO, headers);        ResponseEntity<String> response = restTemplate                .postForEntity(URL + "card", request, String.class);        if (response.getStatusCode().is2xxSuccessful()) {            return new ApiResponse(true, response.getBody());        }        return new ApiResponse(false, response.getBody());    }    public ApiResponse update(String id, CardDTO dto) {        HttpHeaders headers = new HttpHeaders();        headers.setContentType(MediaType.APPLICATION_JSON);        headers.setBearerAuth(TOKEN);        HttpEntity<CardDTO> request = new HttpEntity<>(dto, headers);        ResponseEntity<CardDTO> response = restTemplate                .exchange(URL + "card/" + id, HttpMethod.GET, request, CardDTO.class);        if (response.getStatusCode().is2xxSuccessful()) {            CardDTO card = response.getBody();            card.setBalance(card.getBalance() + dto.getBalance());            ResponseEntity<CardDTO> updated = restTemplate                    .exchange(URL + "card/" + id, HttpMethod.PUT, request, CardDTO.class);            if (updated.getStatusCode().is2xxSuccessful()) {                return new ApiResponse(true, updated.getBody());            }        }        return new ApiResponse(false, response.getBody());    }    public ApiResponse getById(String id) {        HttpHeaders headers = new HttpHeaders();        headers.setContentType(MediaType.APPLICATION_JSON);        headers.setBearerAuth(TOKEN);        HttpEntity<String> request = new HttpEntity<>(headers);        ResponseEntity<CardDTO> response = restTemplate                .exchange(URL + "card/" + id, HttpMethod.GET, request, CardDTO.class);        if (response.getStatusCode().is2xxSuccessful()) {            return new ApiResponse(true, response.getBody());        }        return new ApiResponse(false, response.getBody());    }}