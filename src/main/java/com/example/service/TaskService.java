package com.example.service;import com.example.dto.TaskDTO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.*;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;@Servicepublic class TaskService {    private final String URL = "http://localhost:8081/";    @Autowired    private RestTemplate restTemplate;    @Value("${token}")    private String TOKEN;    public void createTask(TaskDTO dto) {        ResponseEntity<String> response = restTemplate.postForEntity(URL + "task", dto, String.class);        System.out.println(response.getStatusCode());        System.out.println(response.getBody());    }//    public void getTaskList() {////        ResponseEntity<String> response = restTemplate.getForEntity(URL + "task/all", String.class);//        System.out.println(response.getStatusCode());//        System.out.println(response.getBody());//    }    public void getById(String id) {        TaskDTO taskDTO = restTemplate.getForObject(URL + "task/" + id, TaskDTO.class);    }    public void delete(String id) {        restTemplate.delete(URL + "task/" + id);    }    public void delete2(String id) {        restTemplate.delete(URL + "task/{id}", id);    }//    public void taskList() {//        HttpHeaders headers = new HttpHeaders();//        headers.setContentType(MediaType.APPLICATION_JSON);//        headers.setBearerAuth(TOKEN);//        ParameterizedTypeReference<List<TaskDTO>> returnType = new ParameterizedTypeReference<List<TaskDTO>>() {//        };//        try {//            HttpHeaders httpHeaders = new HttpHeaders();//            RequestEntity<TaskDTO> request = new RequestEntity<>(HttpMethod.GET, new URI(URL + "/task"));//            RequestEntity<?> request = new RequestEntity<>(header, HttpMethod.GET, new URI(URL + "task/getAll"));//            ResponseEntity<List<TaskDTO>> response = restTemplate.exchange(request, returnType);//            List<TaskDTO> list = response.getBody();//        } catch (URISyntaxException e) {//            throw new RuntimeException(e);//        }//    }    public void createTask2(TaskDTO dto) {        HttpEntity<TaskDTO> request = new HttpEntity<TaskDTO>(dto);        ResponseEntity<String> response = restTemplate.postForEntity(URL + "task", request, String.class);        System.out.println(response.getStatusCode());        System.out.println(response.getBody());    }    public void getById2(String id) {        HttpHeaders headers = new HttpHeaders();        headers.setContentType(MediaType.APPLICATION_JSON);        HttpEntity<TaskDTO> request = new HttpEntity<TaskDTO>(headers);        ResponseEntity<TaskDTO> responseEntity =                restTemplate.exchange(URL + "task/" + id, HttpMethod.GET, request, TaskDTO.class);    }}