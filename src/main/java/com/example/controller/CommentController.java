package com.example.controller;import com.example.dto.ApiResponse;import com.example.dto.CommentDTO;import com.example.service.CommentService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;import java.util.List;@RestController@RequestMapping("/api/v1/comment")public class CommentController {    @Autowired    private CommentService commentService;    @PostMapping("/open/create")    public ResponseEntity<ApiResponse> create(@Valid @RequestBody CommentDTO dto) {        ApiResponse response = commentService.create(dto);        return ResponseEntity.status(HttpStatus.CREATED).body(response);    }    @PutMapping("/open/update/{id}")    public ResponseEntity<ApiResponse> update(@PathVariable String id,                                              @RequestParam String content) {        ApiResponse response = commentService.update(id, content);        return ResponseEntity.ok(response);    }    @DeleteMapping("/open/delete/{id}")    public ResponseEntity<ApiResponse> update(@PathVariable String id) {        ApiResponse response = commentService.delete(id);        return ResponseEntity.ok(response);    }    @GetMapping("/close/paging/list")    public ResponseEntity<Page<CommentDTO>> paging(@RequestParam(defaultValue = "0") Integer page,                                                   @RequestParam(defaultValue = "30") Integer size) {        Page<CommentDTO> commentDTOPage = commentService.paging(page, size);        return ResponseEntity.ok(commentDTOPage);    }    @GetMapping("/close/list/by-user/{id}")    public ResponseEntity<List<CommentDTO>> getList(@PathVariable Integer id,                                                    @RequestParam(defaultValue = "0") Integer page,                                                    @RequestParam(defaultValue = "30") Integer size) {        return ResponseEntity.ok(commentService.getList(id, page, size));    }    @GetMapping("/close/paging/list-by-user/{id}")    public ResponseEntity<Page<CommentDTO>> paging(@PathVariable Integer id,                                                   @RequestParam(defaultValue = "0") Integer page,                                                   @RequestParam(defaultValue = "30") Integer size) {        Page<CommentDTO> commentDTOPage = commentService.pagingByProfileId(id, page, size);        return ResponseEntity.ok(commentDTOPage);    }}